.TH PGAFitness 1 "05/01/95" " " "PGAPack"
.SH NAME
PGAFitness \- Maps the user's evaluation function value to a fitness value.
.SH DESCRIPTION
First, the user's evaluation function value is translated to all positive
values if any are negative.  Next, this positive sequence is translated to
a maximization problem if the user's optimization direction was minimization.
This positive sequence is then mapped to a fitness value using linear
ranking, linear normalization fitness, or the identity (i.e., the evaluation
function value).  This routine is usually used after PGAEvaluate is called.
.SH INPUT PARAMETERS
.PD 0
.TP
ctx
- context variable
.PD 0
.TP
pop
- symbolic constant of the population to calculate fitness for
.PD 1
.SH OUTPUT PARAMETERS
.PD 0
.TP
none

.PD 1
.SH SYNOPSIS
.nf
#include "pgapack.h"
void  PGAFitness(ctx, popindex)
PGAContext *ctx
int popindex
.fi
.SH LOCATION
fitness.c
.SH EXAMPLE
.nf
Example:
Calculate the fitness of all strings in population PGA_NEWPOP after
calling PGAEvaluate to calculate the strings evaluation value.

double energy(PGAContext *ctx, int p, int pop);
PGAContext *ctx;
:
PGAEvaluate(ctx, PGA_NEWPOP, energy);
PGAFitness (ctx, PGA_NEWPOP);

.fi
